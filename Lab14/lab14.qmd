---
title: "Lab14"
author: "Gretel Warmuth (PID: A17595945)"
format: pdf
---

## Data Import

```{r}
library(DESeq2)
```

Loading in the files:

```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
metadata <- read.csv(metaFile,row.names=1)
head(metadata)
```

```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)
```

Check correspondance of the columns of `counts` and the rows of `metadata`

```{r}
colnames(countData)
```

```{r}
metadata$id <- row.names(metadata)
metadata$id
```

Removing the first "length" column from the `counts`

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)
```

Excluding genes with 0 read count:

```{r}
to.rm <- rowSums(countData) == 0
head(countData[!to.rm,])
```

## DESeq Setup

```{r}
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=metadata,
                             design=~condition)
dds = DESeq(dds)
```

```{r}
dds
```

##DESeq Analysis

Results for the HoxA1 knockdown versus control siRNA:

```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
resultsNames(dds)
```

Upregulated vs downregulated genes:

```{r}
summary(res)
```

## Result Visualization

Volcano plot of this data:

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

Fixing the color:

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

## Add Annotation

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=rownames(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=rownames(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

## Pathway Analysis

Loading packages in:

```{r}
library(pathview)
```

Setting up KEGG datasets:

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Running gage:

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

Looking at different pathways:

```{r}
#Look at the first few down (less) pathways
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

## Gene Ontology

Setting up gene ontology:

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```


## Setup for REACTOME:

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```


## Save Results



