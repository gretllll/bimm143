---
title: "Lab 8"
author: "Gretel Warmuth (PID: A17595945)"
format: pdf
---

# PCA Mini Project

It is important to consider scalling your data before analysis such as PCA.

For example:

```{r}
head(mtcars)
```

```{r}
colMeans(mtcars)
```

```{r}
apply(mtcars, 2, sd)
```

```{r}
x <- scale(mtcars)
head(x)
```

```{r}
round(colMeans(x), 2)
```

## Preparing the Data

Downloading, preparing, and reading our data for breast cancer: 

```{r}
fna.data <- "https://bioboot.github.io/bimm143_S20/class-material/WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```

We need to omit the first column `diagnosis` so that PCA doesn't read this column. We will use the column as a comparison to our own analysis:

```{r}
# We can use -1 to remove the first column

wisc.data <- wisc.df[,-1]
head(wisc.data)
```

For future use, we will need a factor that includes the `diagnosis` column:

```{r}
# We can use the table() function to tell us how many malignant and benign cells there are in the data

diagnosis_table <- wisc.df[, 1]
table(diagnosis_table)
```

```{r}
diagnosis <- as.factor(wisc.df[, 1])
head(diagnosis)
```

## Exploratory Data Analysis

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```


> Q2. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df[, 1])
```


> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
length(grep("mean", names(wisc.df), value = T, fixed = F))
```


## Principal Component Analysis

Checking means and standard deviations:

```{r}
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

Scaling the Data:

```{r}
wisc.pr <- prcomp( wisc.data, scale = T )
summary(wisc.pr)
```

What's in the PCA result object?

```{r}
attributes(wisc.pr)
```


```{r}
head(wisc.pr$x)
```


Main "PC Score Plot"/"PC1 vs PC2 Plot":

```{r}
# plot(wisc.pr$x)
plot(wisc.pr$x[, 1], wisc.pr$x[, 2], col = as.factor(diagnosis))
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

```{r}
wisc_summary <- summary(wisc.pr)
wisc_summary$importance[2, 1]
```

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

```{r}
cumulative_proportion_70 <- wisc_summary$importance["Cumulative Proportion", ]
which(cumulative_proportion_70 >= 0.70)[1]
```


> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
cumulative_proportion_90 <- wisc_summary$importance["Cumulative Proportion", ]
which(cumulative_proportion_90 >= 0.90)[1]
```


## Interpreting PCA results

Creating a biplot:

```{r}
biplot(wisc.pr)
```

> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

This is not an easy plot to read or understand. All values are shown on top of each other and it is not clear what values correspond to each x and y axis.

Creating a scatter plot:

```{r}
plot(wisc.pr$x, col = diagnosis, xlab= "PC1", ylab = "PC2")
```

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
# Plot PC1 vs PC3
plot(wisc.pr$x[, 1], wisc.pr$x[, 3], col = diagnosis,
     xlab = "PC1", ylab = "PC3")
```

The plot containing PC1 and PC2 is more contained and describes the data than the plot containing PC1 and PC3.

Creating a ggplot of the data:

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

## Variance explained

Calculating the variance: 

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
total_variance <- sum(pr.var)

# Variance explained by each principal component: pve
pve <- pr.var / total_variance

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

Creating a bar plot:

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

## Communicating PCA results

>Q. Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation["concave.points_mean", 1]
```

>Q. Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
cumulative_variance <- cumsum(pr.var / sum(pr.var))
which(cumulative_variance >= 0.80)[1]
```

## 3. Hierarchical clustering

Scaling the data: 

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
head(data.scaled)
```

Calculating Eucladian distances:

```{r}
data.dist <- dist(data.scaled)
head(data.dist)
```

Creating Hierarchical clustering:

```{r}
wisc.hclust <- hclust(data.dist, method = "complete")
wisc.hclust
```

## Results of hierarchical clustering

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h = 18, col="red", lty=2)
```

Cutting the tree:

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

> Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

A better match would probably be cut into two clusters to compare benign vs malignant diagnoses.

> Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

`ward.D2()` is my favorite because it shows compact results of clusters, shows clear trees, and can handle outliers well in a data set.

## Combining Methods

Creating a better dendrogram to analyze malignant and benign results:

```{r}
# distance matrix from PCA result
d <- dist(wisc.pr$x[, 1:3])
wisc.pr.hclust <- hclust(d, method = "ward.D2")
plot(wisc.pr.hclust)
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```


```{r}
plot(wisc.pr$x[, 1:2], col = grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

## Sensitivity/Specificity 

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?
Compare clustering result to expert diagnosis

```{r}
table(grps, diagnosis)
```

The newly created model soes seoarate the the diagnoses to benign and malignant and then splits them into possible "false-positives". This gives a very clear comparison between the expert diagnosis and the plot made from the scaled data.

> Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
table(wisc.hclust.clusters, diagnosis)
```

(k-means not included as it was optional) The `wisc.hclust.clusters` match does not accurately separate the diagnoses as there are four groups compared to only two groups in the diagnosis category (benign and malignant). The `grps` match to diagnosis is much more accurate and comperable. 

## Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q18. Which of these new patients should we prioritize for follow up based on your results?

Patients in the first group should probably be prioritized for follow up first because they are more diverged from their center than group 1.


